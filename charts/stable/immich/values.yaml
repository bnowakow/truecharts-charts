image:
  repository: ghcr.io/immich-app/immich-server
  tag: v1.142.0@sha256:29f12a20fd1975c9df06d99a65658cec40bf2357fb597499c32ee50a75f250ea
  pullPolicy: IfNotPresent

mlImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.142.0@sha256:5e9cc6b9717e34f3cdc591aa860d6d29c990405ef87ad057ef95f73096ae6f29
  pullPolicy: IfNotPresent

mlCudaImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.142.0-cuda@sha256:9c09821f76fcde38e50246f48c865f95d54bfaab8ddf066afb04bf4c2f5d417a
  pullPolicy: IfNotPresent

mlOpenvinoImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.142.0-openvino@sha256:01e879c2bedc89ac419bb12e5ff365f38a653b5d0a042ac51c3c6128ef4056bc
  pullPolicy: IfNotPresent

mlRocmImage:
  repository: ghcr.io/immich-app/immich-machine-learning
  tag: v1.142.0-rocm@sha256:5fa3adbbfc3d2f56d3bd6a71743fd8bf54b7d6303dd64a42f16ca685b967ae1d
  pullPolicy: IfNotPresent

securityContext:
  container:
    readOnlyRootFilesystem: false
    runAsNonRoot: false
    runAsUser: 0
    runAsGroup: 0

immich:
  enable_ml: true
  mlImageType: mlImage
  log_level: log

service:
  main:
    # Main service targets the server
    targetSelector: main
    ports:
      main:
        port: 10323
        protocol: http
        targetSelector: main
  microservices:
    enabled: true
    type: ClusterIP
    targetSelector: microservices
    ports:
      microservices:
        enabled: true
        primary: true
        port: 10004
        protocol: http
        targetSelector: microservices
  machinelearning:
    enabled: true
    type: ClusterIP
    targetSelector: machinelearning
    ports:
      machinelearning:
        enabled: true
        primary: true
        port: 10003
        protocol: http
        targetSelector: machinelearning

persistence:
  mlcache:
    enabled: true
    type: emptyDir
    targetSelector:
      machinelearning:
        machinelearning:
          mountPath: /mlcache
  microcache:
    enabled: true
    type: emptyDir
    targetSelector:
      microservices:
        microservices:
          mountPath: /microcache
  library:
    enabled: true
    mountPath: /usr/src/app/upload/library
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  uploads:
    enabled: true
    mountPath: /usr/src/app/upload/upload
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  backups:
    enabled: true
    mountPath: /usr/src/app/upload/backups
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  thumbs:
    enabled: true
    mountPath: /usr/src/app/upload/thumbs
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  profile:
    enabled: true
    mountPath: /usr/src/app/upload/profile
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}
  video:
    enabled: true
    mountPath: /usr/src/app/upload/encoded-video
    targetSelector:
      # Main pod/container is server
      main:
        main: {}
      microservices:
        microservices: {}

cnpg:
  main:
    enabled: true
    user: immich
    database: immich
    type: vectors
    cluster:
      initdb:
        postInitApplicationSQL:
          - CREATE EXTENSION IF NOT EXISTS cube;
          - CREATE EXTENSION IF NOT EXISTS earthdistance;
          - CREATE SCHEMA IF NOT EXISTS vectors;
          - ALTER DATABASE immich SET search_path TO "immich", public, vectors;
          - SET search_path TO "immich", public, vectors;
          - GRANT SELECT ON TABLE pg_vector_index_stat TO PUBLIC;
          - ALTER SCHEMA vectors OWNER TO immich;

redis:
  enabled: true
  redisUsername: default

ingress:
  main:
    integrations:
      homepage:
        widget:
          version: 2
